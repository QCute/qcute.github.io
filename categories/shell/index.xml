<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shell on 轻作</title><link>https://qcute.github.io/categories/shell/</link><description>Recent content in shell on 轻作</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 10 Mar 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://qcute.github.io/categories/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>RockyLinux调整分区大小</title><link>https://qcute.github.io/posts/shell/lv-resize/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/lv-resize/</guid><description>先备份整个home目录 卸载home目录 umount /home 移除home卷 lvremove /dev/mapper/rl-home 调整home卷大小 lvresize -L -10G /dev/mapper/rl-home 调整root卷大小 lvextend -L +10G /dev/mapper/rl-root 同步root卷大小 xfs_growfs /dev/mapper/rl-root 使用pvs查看卷 PV VG Fmt Attr PSize PFree /dev/sda3 rl lvm2 a-- &amp;lt;120.00g 0 将剩余空间分配给home卷</description></item><item><title>Service Unit User问题</title><link>https://qcute.github.io/posts/shell/service-unit-user/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/service-unit-user/</guid><description>今天发现php的getenv函数返回false getenv(&amp;#39;HOME&amp;#39;) 由于是系统是运行在system daemon下的, 查看了service unit, 里面并无指定具体的user 所以, 在Service里面添加User [Service] # specific user User=root 函数就可</description></item><item><title>sudoers免密码</title><link>https://qcute.github.io/posts/shell/sudoers/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/sudoers/</guid><description>修改 /etc/sudoers Debian/Ubuntu # User privilege specification root ALL=(ALL:ALL) ALL # Allow members of group sudo to execute any command %sudo ALL=(ALL:ALL) ALL # See sudoers(5) for more information on &amp;#34;@include&amp;#34; directives: user ALL=(ALL) NOPASSWD:ALL RedHat/CentOS/RockyLinux ## Allow root to run any commands anywhere root ALL=(ALL) ALL user ALL=(ALL) NOPASSWD:ALL ## Allows members of the &amp;#39;sys&amp;#39; group to run networking, software, ## service management apps and more. # %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS ## Allows people in group wheel to run all commands %wheel ALL=(ALL) ALL ## Same thing without a password %wheel</description></item><item><title>记一次bash的while循环中使用escript的问题</title><link>https://qcute.github.io/posts/shell/while-escript/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/while-escript/</guid><description>问题 在一次写脚本时，偶然发现了当Escript在Bash的while中使用时，循环里明明有很多次，但是Escript却只执行了一次的问题。 Escript执行脚本test.erl时，启动命令如下 test.erl -B -- -root</description></item><item><title>软链接路径tab补全斜杠号</title><link>https://qcute.github.io/posts/shell/input-rc/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/input-rc/</guid><description>修改 /etc/inputrc # Completed names which are symbolic links to # directories have a slash appended. set mark-symlinked-directories on 这样, 软链接就可以像普通目录一样补全斜杠/号了 不过, 删除的时候就要小心了, 不要带上后面的斜杠/号, 不然就会把源目录一起删掉</description></item><item><title>使用RPM仓库安装Prometheus</title><link>https://qcute.github.io/posts/shell/prometheus/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/prometheus/</guid><description>1. 安装prometheus/grafana/alertmanager # rpm repo # https://github.com/lest/prometheus-rpm cat &amp;gt; /etc/yum.repos.d/prometheus.repo &amp;lt;&amp;lt; EOF [prometheus] name=prometheus baseurl=https://packagecloud.io/prometheus-rpm/release/el/\$releasever/\$basearch repo_gpgcheck=1 enabled=1 gpgkey=https://packagecloud.io/prometheus-rpm/release/gpgkey https://raw.githubusercontent.com/lest/prometheus-rpm/master/RPM-GPG-KEY-prometheus-rpm gpgcheck=1 metadata_expire=300 EOF # update cache dnf makecache # grafana dnf install grafana -y systemctl start grafana # prometheus dnf install prometheus -y # exporter cat &amp;gt;&amp;gt; /etc/prometheus/prometheus.yml &amp;lt;&amp;lt; EOF - job_name: &amp;#34;node_exporter&amp;#34; static_configs: - targets: [&amp;#34;localhost:9100&amp;#34;] - job_name: &amp;#34;mysqld_exporter&amp;#34; static_configs: - targets: [&amp;#34;localhost:9104&amp;#34;] - job_name: &amp;#34;process_exporter&amp;#34; static_configs: -</description></item><item><title>一个简单的SSH Pass脚本</title><link>https://qcute.github.io/posts/shell/ssh-pass/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/ssh-pass/</guid><description>#!/usr/bin/env bash # sshpass - use command line password with ssh # inspire by https://github.com/huan/sshpass.sh # ref to https://www.exratione.com/2014/08/bash-script-ssh-automation-without-a-password-prompt/ # the origin sshpass pass passphrase by pipe, but Symfony Process pipe need --enable-sigchild # examples: # sshpass &amp;lt;ssh or key passphrase&amp;gt; ssh &amp;lt;ssh options&amp;gt; # sshpass &amp;lt;ssh or key passphrase&amp;gt; scp &amp;lt;scp options&amp;gt; # sshpass &amp;lt;ssh or key passphrase&amp;gt; rsync &amp;lt;rsync options&amp;gt; # sshpass &amp;lt;ssh or key passphrase&amp;gt; git &amp;lt;git options&amp;gt; # sshpass &amp;lt;ssh or key passphrase&amp;gt; svn &amp;lt;svn options&amp;gt; if [[ -n &amp;#34;${SSH_ASKPASS_PASSWORD}&amp;#34; ]];then cat &amp;lt;&amp;lt;&amp;lt; &amp;#34;${SSH_ASKPASS_PASSWORD}&amp;#34; else export SSH_ASKPASS=&amp;#34;$0&amp;#34; export SSH_ASKPASS_PASSWORD=&amp;#34;$1&amp;#34; export DISPLAY=:0 shift setsid &amp;#34;$@&amp;#34; &amp;lt;/dev/null fi</description></item><item><title>一个简单的双向代理</title><link>https://qcute.github.io/posts/shell/proxy/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/shell/proxy/</guid><description>1. 使用fifo和nc # client -&amp;gt; proxy:8974 -&amp;gt; server:8998 rm -f /tmp/fifo &amp;amp;&amp;amp; mkfifo /tmp/fifo &amp;amp;&amp;amp; nc -lkp 8974 &amp;lt; /tmp/fifo | nc -lkp 8998 &amp;gt; /tmp/fifo 2. 使用socat # client -&amp;gt; proxy:8974 -&amp;gt; server:8998 socat TCP4-LISTEN:8974,reuseaddr,fork TCP4:127.0.0.1:8998</description></item></channel></rss>