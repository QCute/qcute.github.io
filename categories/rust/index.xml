<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rust on 轻作</title><link>https://qcute.github.io/categories/rust/</link><description>Recent content in rust on 轻作</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 09 Mar 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://qcute.github.io/categories/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Rust async/await初探</title><link>https://qcute.github.io/posts/rust/async-await/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/rust/async-await/</guid><description>1. async/await 异步函数 async fn f0() -&amp;gt; u32 { let f1 = f1().await; let f2 = f2().await; f1 + f2 } async fn f1() -&amp;gt; u32 { 1 } async fn f2() -&amp;gt; u32 { 2 } 生成的HIR Playground左上角点HIR async fn f0() -&amp;gt; /*impl Trait*/ #[lang = &amp;#34;from_generator&amp;#34;](move |mut _task_context| {{ let _t = { let f1 = match #[lang = &amp;#34;into_future&amp;#34;](f1()) { mut __awaitee =&amp;gt; loop { match unsafe { #[lang = &amp;#34;poll&amp;#34;](#[lang = &amp;#34;new_unchecked&amp;#34;](&amp;amp;mut</description></item></channel></rss>