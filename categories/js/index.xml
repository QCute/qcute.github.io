<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Js on 轻作</title><link>https://qcute.github.io/categories/js/</link><description>Recent content in Js on 轻作</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 06 Mar 2020 00:00:00 +0800</lastBuildDate><atom:link href="https://qcute.github.io/categories/js/index.xml" rel="self" type="application/rss+xml"/><item><title>JS简单随机密码</title><link>https://qcute.github.io/posts/js/random-password/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/js/random-password/</guid><description>function randomPassword(length) { const charArray = [ // 数字 &amp;#34;0&amp;#34;, &amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;, &amp;#34;4&amp;#34;, &amp;#34;5&amp;#34;, &amp;#34;6&amp;#34;, &amp;#34;7&amp;#34;, &amp;#34;8&amp;#34;, &amp;#34;9&amp;#34;, // 大写字母 &amp;#34;A&amp;#34;, &amp;#34;B&amp;#34;, &amp;#34;C&amp;#34;, &amp;#34;D&amp;#34;, &amp;#34;E&amp;#34;, &amp;#34;F&amp;#34;, &amp;#34;G&amp;#34;, &amp;#34;H&amp;#34;, &amp;#34;I&amp;#34;, &amp;#34;J&amp;#34;, &amp;#34;K&amp;#34;, &amp;#34;L&amp;#34;, &amp;#34;M&amp;#34;, &amp;#34;N&amp;#34;, &amp;#34;O&amp;#34;, &amp;#34;P&amp;#34;, &amp;#34;Q&amp;#34;, &amp;#34;R&amp;#34;, &amp;#34;S&amp;#34;, &amp;#34;T&amp;#34;, &amp;#34;U&amp;#34;, &amp;#34;V&amp;#34;, &amp;#34;W&amp;#34;, &amp;#34;X&amp;#34;, &amp;#34;Y&amp;#34;, &amp;#34;Z&amp;#34;, // 小写字母 &amp;#34;a&amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;c&amp;#34;, &amp;#34;d&amp;#34;, &amp;#34;e&amp;#34;, &amp;#34;f&amp;#34;, &amp;#34;g&amp;#34;, &amp;#34;h&amp;#34;, &amp;#34;i&amp;#34;, &amp;#34;j&amp;#34;, &amp;#34;k&amp;#34;, &amp;#34;l&amp;#34;, &amp;#34;m&amp;#34;, &amp;#34;n&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34;p&amp;#34;, &amp;#34;q&amp;#34;, &amp;#34;r&amp;#34;, &amp;#34;s&amp;#34;, &amp;#34;t&amp;#34;, &amp;#34;u&amp;#34;, &amp;#34;v&amp;#34;, &amp;#34;w&amp;#34;, &amp;#34;x&amp;#34;, &amp;#34;y&amp;#34;, &amp;#34;z&amp;#34;, ]; return Array.from({length}, () =&amp;gt; charArray[Math.trunc(Math.random() * charArray.length)]).join(&amp;#34;&amp;#34;); }</description></item><item><title>UniApp(uViewUI)弹出层滚动穿透问题</title><link>https://qcute.github.io/posts/js/uni-app-popup-scroll-through/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/js/uni-app-popup-scroll-through/</guid><description>动态修改页面属性 在网上搜了下，说要设置page-meta样式 &amp;lt;page-meta :page-style=&amp;#34;{&amp;#39;overflow&amp;#39;: scroll ? &amp;#39;visible&amp;#39; : &amp;#39;hidden&amp;#39; }&amp;#34;&amp;gt; 如果每个有弹窗的页面都要额外再设置一个page-meta的话，这就很不方便了 我们看下uViewUI弹窗例子 &amp;lt;template&amp;gt; &amp;lt;view&amp;gt; &amp;lt;u-popup :show=&amp;#34;show&amp;#34; @close=&amp;#34;close&amp;#34; @open=&amp;#34;open&amp;#34; @touchmove.stop=&amp;#34;&amp;#34;&amp;gt; &amp;lt;scroll-view scroll-y</description></item><item><title>使用ResizeObserver监听元素大小变化</title><link>https://qcute.github.io/posts/js/resize-observer/</link><pubDate>Fri, 06 Mar 2020 00:00:00 +0800</pubDate><guid>https://qcute.github.io/posts/js/resize-observer/</guid><description>在前端页面中，由于div元素没有相应onresize事件，当ECharts图形在容器div发生变化时，没有像浏览器窗口发生变化的时候能够自适应调整大小。 在窗口变化时，有效 // 正常 window.onresize = () =&amp;gt; chart.resize(); 在div容器变</description></item></channel></rss>